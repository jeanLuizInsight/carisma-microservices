server:
  port: 8100
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
spring:
  application:
    name: book-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/book_service?useTimezone=true&serverTimezone=UTC
    username: poc
    password: mysqlpw
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  flyway:
    url: jdbc:mysql://localhost:3306/
    schemas:
    - book_service
    user: poc
    password: mysqlpw
resilience4j:
  retry:
    instances:
      fooBar:
        max-attempts: 5 # tenta 5 vezes
        wait-duration: 1s # em intervalo de 1s
        enable-exponential-backoff: true # cada intervalo aumenta exponencial
  circuitbreaker:
    configs:
      default:
        failure-rate-threshold: 50
        minimum-number-of-calls: 50
        permittedNumberOfCallsInHalfOpenState: 5
        slidingWindowSize: 20
        slidingWindowType: TIME_BASED
        waitDurationInOpenState: 30s
        slowCallRateThreshold: 80
        slowCallDurationThreshold: 29s
        registerHealthIndicator: true
        recordExceptions:
          - feign.FeignException.InternalServerError
          - feign.FeignException.ServiceUnavailable
          - feign.FeignException.GatewayTimeout
    instances:
      fooBarCb:
        base-config: default
  ratelimiter:
    instances:
      fooBarRt:
        limit-for-period: 2 # 2 requisições
        limit-refresh-period: 10s # a cada 10 segundos
  bulkhead:
    instances:
      fooBarBh:
        max-concurrent-calls: 10 # até 10 chamadas concorrentes
springdoc:
  api-docs:
    path: book-service/v3/api-docs # adicionado para doc ser encontrado no gateway
  show-actuator: true



